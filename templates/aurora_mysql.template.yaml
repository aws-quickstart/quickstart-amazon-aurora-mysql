---
AWSTemplateFormatVersion: '2010-09-09'
Description: "AWS Aurora MySql, Do Not Remove Apache License Version 2.0 (qs-1r51947et) Jun,15,2019"

Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - W9006
        - E9101
  LICENSE: Apache License Version 2.0
  QuickStartDocumentation:
    EntrypointName: "Parameters for deploying into an existing VPC"
    Order: "2"
    OptionalParameters:
      - EnvironmentStage
      - Application
      - ApplicationVersion
      - ProjectCostCenter
      - Confidentiality
      - Compliance
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - VPCID
          - Subnet1ID
          - Subnet2ID
          - CustomDBSecurityGroup
          - DBAccessCIDR
      - Label:
          default: Database configuration
        Parameters:
          - DBName
          - DBMasterUsername
          - RotateDBPassword
          - DBMasterUserPassword
          - DBPort
          - DBAutoMinorVersionUpgrade
          - DBBackupRetentionPeriod
          - DBEngineMode
          - DBEngineVersion
          - DBMultiAZ
          - DBInstanceClass
          - DBAllocatedStorageEncrypted
          - DBCWLogExports
          - DBBackTrack
          - NotificationList
      - Label:
          default: Serverlessâ€”applicable only when database engine mode (DBEngineMode) is serverless
        Parameters:
          - ServerlessMinCapacityUnit
          - ServerlessMaxCapacityUnit
          - ServerlessAutoPause
          - ServerlessSecondsUntilAutoPause
      - Label:
          default: (Optional) Database tags
        Parameters:
          - EnvironmentStage
          - Application
          - ApplicationVersion
          - ProjectCostCenter
          - Confidentiality
          - Compliance
      - Label:
          default: Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      DBName:
        default: Database name
      RotateDBPassword:
        default: Rotate database password
      DBEngineVersion:
        default: Database engine version
      DBEngineMode:
        default: Database engine mode
      DBAllocatedStorageEncrypted:
        default: Database encryption enabled
      DBCWLogExports:
        default: Database CloudWatch log exports
      DBAutoMinorVersionUpgrade:
        default: Database automatic minor version upgrades
      DBBackupRetentionPeriod:
        default: Database backup retention period
      DBInstanceClass:
        default: Database instance class
      DBMasterUsername:
        default: Database administrator user name
      DBMasterUserPassword:
        default: Database administrator password
      DBPort:
        default: Database port
      DBAccessCIDR:
        default: Database connection CIDR
      DBMultiAZ:
        default: Multi-AZ deployment
      DBBackTrack:
        default: Aurora database backtracking
      Subnet1ID:
        default: Private subnet 1 ID
      Subnet2ID:
        default: Private subnet 2 ID
      VPCID:
        default: VPC ID
      CustomDBSecurityGroup:
        default: Custom security group ID
      NotificationList:
        default: SNS notification-list email address
      EnvironmentStage:
        default: Environment stage
      Application:
        default: Application name
      ApplicationVersion:
        default: Application version
      Compliance:
        default: Compliance classifier
      Confidentiality:
        default: Confidentiality classifier
      ProjectCostCenter:
        default: Project cost center
      ServerlessMinCapacityUnit:
        default: Minimum Aurora capacity unit
      ServerlessMaxCapacityUnit:
        default: Maximum Aurora capacity unit
      ServerlessAutoPause:
        default: Pause compute capacity
      ServerlessSecondsUntilAutoPause:
        default: Pause after time of inactivity
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix

Parameters:
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: aws-quickstart
    Description: "Name of the S3 bucket for your copy of the Quick Start assets. Keep the default name unless you are customizing the template. Changing the name updates code references to point to a new Quick Start location. This name can include numbers, lowercase letters, uppercase letters, and hyphens, but do not start or end with a hyphen (-). See https://aws-quickstart.github.io/option1.html."
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: quickstart-amazon-aurora-mysql/
    Description: "S3 key prefix that is used to simulate a directory for your copy of the Quick Start assets. Keep the default prefix unless you are customizing the template. Changing this prefix updates code references to point to a new Quick Start location. This prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slashes (/). End with a forward slash. See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html and https://aws-quickstart.github.io/option1.html."
    Type: String
  DBMultiAZ:
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
    Description: If the database instance is not in a multiple Availability Zone deployment, choose "false." Not applicable for Aurora Serverless.
    Type: String
  DBBackTrack:
    AllowedValues:
      - "true"
      - "false"
    Default: "false"
    Description: Aurora database backtracking "rewinds" the DB cluster to a time you specify without needing to restore data from a backup. To enable database backtracking, choose "true." Not applicable for Aurora Serverless, Aurora Global Database and Aurora Multi-master. See https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.Backtrack.html.
    Type: String
  DBAllocatedStorageEncrypted:
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: To disable database encryption, choose "false."
    Type: String
  DBCWLogExports:
    Type: CommaDelimitedList
    Default: ''
    Description: "Specify the comma-delimited list of database logs (error, slowquery, audit) to export to CloudWatch Logs. Not applicable for Aurora Serverless."
  RotateDBPassword:
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
    Description: To rotate the password on a schedule (every 89 days), choose "true."
    Type: String
  DBAutoMinorVersionUpgrade:
    AllowedValues:
      - "true"
      - "false"
    Default: "false"
    Description: To enable automatic minor version upgrades, choose "true."
    Type: String
  DBBackupRetentionPeriod:
    Default: 35
    Description: "Number of days (from 1 to 35) that automatic database snapshots are retained."
    Type: Number
    MinValue: 1
    MaxValue: 35
  DBEngineVersion:
    Description: "Version of the database engine. Currently Multi-Master is available only for Aurora-MySQL5.6.10a, Serverless is available only for Aurora-MySQL5.6.10a and Aurora-MySQL5.7-2.07.1. To see supported Aurora features by Regions and engine versions, see https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraFeaturesRegionsDBEngines.grids.html."
    Type: String
    Default: 'Aurora-MySQL5.7.12'
    AllowedValues:
      - 'Aurora-MySQL5.6.10a'
      - 'Aurora-MySQL5.6-1.19.0'
      - 'Aurora-MySQL5.6-1.19.1'
      - 'Aurora-MySQL5.6-1.19.2'
      - 'Aurora-MySQL5.6-1.19.5'
      - 'Aurora-MySQL5.6-1.19.6'
      - 'Aurora-MySQL5.6-1.20.0'
      - 'Aurora-MySQL5.6-1.20.1'
      - 'Aurora-MySQL5.6-1.21.0'
      - 'Aurora-MySQL5.6-1.22.0'
      - 'Aurora-MySQL5.6-1.22.1'
      - 'Aurora-MySQL5.6-1.22.2'
      - 'Aurora-MySQL5.6-1.22.3'
      - 'Aurora-MySQL5.6-1.22.4'
      - 'Aurora-MySQL5.6-1.23.0'
      - 'Aurora-MySQL5.6-1.23.1'
      - 'Aurora-MySQL5.7.12'
      - 'Aurora-MySQL5.7-2.03.2'
      - 'Aurora-MySQL5.7-2.03.3'
      - 'Aurora-MySQL5.7-2.03.4'
      - 'Aurora-MySQL5.7-2.04.0'
      - 'Aurora-MySQL5.7-2.04.1'
      - 'Aurora-MySQL5.7-2.04.2'
      - 'Aurora-MySQL5.7-2.04.3'
      - 'Aurora-MySQL5.7-2.04.4'
      - 'Aurora-MySQL5.7-2.04.5'
      - 'Aurora-MySQL5.7-2.04.6'
      - 'Aurora-MySQL5.7-2.04.7'
      - 'Aurora-MySQL5.7-2.04.8'
      - 'Aurora-MySQL5.7-2.04.9'
      - 'Aurora-MySQL5.7-2.05.0'
      - 'Aurora-MySQL5.7-2.06.0'
      - 'Aurora-MySQL5.7-2.07.0'
      - 'Aurora-MySQL5.7-2.07.1'
      - 'Aurora-MySQL5.7-2.07.2'
      - 'Aurora-MySQL5.7-2.07.3'
      - 'Aurora-MySQL5.7-2.07.4'
      - 'Aurora-MySQL5.7-2.08.0'
      - 'Aurora-MySQL5.7-2.08.1'
      - 'Aurora-MySQL5.7-2.08.2'
      - 'Aurora-MySQL5.7-2.08.3'
      - 'Aurora-MySQL5.7-2.09.0'
      - 'Aurora-MySQL5.7-2.09.1'
      - 'Aurora-MySQL5.7-2.09.2'
      - 'Aurora-MySQL5.7-2.10.0'
  DBEngineMode:
    Description: "Engine mode of the cluster. With provisioned databases (the default), you provision and manage the server instance sizes. For descriptions of the other options, see https://aws.amazon.com/rds/aurora/faqs/."
    Type: String
    Default: 'provisioned'
    AllowedValues:
      - 'provisioned'
      - 'parallelquery'
      - 'serverless'
      - 'global'
      - 'multimaster'
  DBInstanceClass:
    AllowedValues:
      - db.r5.24xlarge
      - db.r5.16xlarge
      - db.r5.12xlarge
      - db.r5.8xlarge
      - db.r5.4xlarge
      - db.r5.2xlarge
      - db.r5.xlarge
      - db.r5.large
      - db.r4.16xlarge
      - db.r4.8xlarge
      - db.r4.4xlarge
      - db.r4.2xlarge
      - db.t3.medium
      - db.t3.small                
    ConstraintDescription: "Must select a valid database instance type."
    Default: db.r5.large
    Description: "Name of the compute and memory-capacity class of the database instance. Not applicable for Aurora Serverless. Supported instance type for Aurora Multi-Master is db.r4.[2/4/8/16]xlarge only. db.t3 instance class doesn't support RDS Performance Insights."
    Type: String
  DBAccessCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/x"
    Description: "Allowed CIDR block for external access (use VPC CIDR)."
    Type: String
    Default: 10.0.0.0/16
  DBMasterUserPassword:
    AllowedPattern: ^(?=^.{8,255}$)(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^A-Za-z0-9])(?!.*[@/"']).*$
    ConstraintDescription: "Min 8 chars. Must include 1 uppercase, 1 lowercase, 1 number, 1 (non / @ \" ') symbol"
    Description: "Administrator password for the database account. Minimum 8 characters. Must include 1 uppercase, 1 lowercase, 1 number, 1 symbol (not / @ \" ')."
    MaxLength: "64"
    MinLength: "8"
    NoEcho: "True"
    Type: String
  DBMasterUsername:
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: "Must begin with a letter and contain only alphanumeric characters."
    Default: msadmin
    Description: "Administrator user name for the database account."
    MaxLength: "16"
    MinLength: "1"
    Type: String
  DBPort:
    Default: 3306
    Description: "Port on which the DB instance listens for connections. Aurora Serverless supports port 3306 only."
    Type: Number
    ConstraintDescription: 'Must be in the range [1150-65535].'
    MinValue: 1150
    MaxValue: 65535
  DBName:
    Default: 'AuroraMySQLDB'
    Description: "Name of the Amazon Aurora database."
    MaxLength: "63"
    MinLength: "5"
    Type: String
  CustomDBSecurityGroup:
    Description: "ID of the security group (e.g., sg-0234se). One will be created for you if left empty."
    Type: String
    Default: ''
  Subnet1ID:
    Description: ID of the private subnet in Availability Zone 1.
    Type: 'AWS::EC2::Subnet::Id'
  Subnet2ID:
    Description: ID of the private subnet in Availability Zone 2.
    Type: 'AWS::EC2::Subnet::Id'
  VPCID:
    Description: "ID of the VPC you are deploying Aurora into (e.g., vpc-0343606e)."
    Type: 'AWS::EC2::VPC::Id'
    Default: ''
  NotificationList:
    Type: String
    Default: 'db-ops@domain.com'
    Description: Email-list address used to configure an SNS topic for sending CloudWatch alarm and RDS event notifications.
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: Provide a valid email address.
  EnvironmentStage:
    Type: String
    Description: (Optional) Environment stage of the associated AWS resource.
    AllowedValues:
      - dev
      - test
      - pre-prod
      - prod
      - none
    Default: none
  Application:
    Type: String
    Default: ''
    Description: (Optional) Name of the application for the associated AWS resource.
  ApplicationVersion:
    Type: String
    Description: (Optional) Version of the application.
    Default: ''
  ProjectCostCenter:
    Type: String
    Default: ''
    Description: (Optional) Cost center associated with the project of the associated AWS resource.
  Confidentiality:
    Type: String
    Default: ''
    Description: (Optional) Confidentiality classification of the data that is associated with the AWS resource.
    AllowedValues:
      - public
      - private
      - confidential
      - pii/phi
      - ''
  Compliance:
    Type: String
    Default: ''
    Description: (Optional) Compliance level for the AWS resource.
    AllowedValues:
      - hipaa
      - sox
      - fips
      - other
      - ''
  ServerlessMinCapacityUnit:
    Description: Minimum capacity for an Aurora DB cluster in serverless DB engine mode. The minimum capacity must be less than or equal to the maximum capacity.
    Type: String
    Default: '2'
    AllowedValues:
      - '1'
      - '2'
      - '4'
      - '8'
      - '16'
      - '32'
      - '64'
      - '128'
      - '256'
  ServerlessMaxCapacityUnit:
    Description: Maximum capacity for an Aurora DB cluster in serverless DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity.
    Type: String
    Default: '64'
    AllowedValues:
      - '1'
      - '2'
      - '4'
      - '8'
      - '16'
      - '32'
      - '64'
      - '128'
      - '256'
  ServerlessAutoPause:
    Description: To enable automatic pause for an Aurora DB cluster in serverless DB engine mode, choose "true." A DB cluster can be paused only when it's idle (when it has no connections).
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
  ServerlessSecondsUntilAutoPause:
    Description: Time, in seconds, before an Aurora DB cluster in serverless mode is automatically paused. Minimum = 300. Maximum = 86400 (24 hours).
    Type: Number
    Default: 300
    MaxValue: 86400
    MinValue: 300

Mappings:
  DBFamilyMap:    
    "Aurora-MySQL5.6.10a":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.19.0":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.19.1":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.19.2":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.19.5":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.19.6":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.20.0":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.20.1":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.21.0":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.22.0":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.22.1":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.22.2":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.22.3":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.22.4":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.23.0":
      "family": "aurora5.6"
    "Aurora-MySQL5.6-1.23.1":
      "family": "aurora5.6"
    "Aurora-MySQL5.7.12":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.03.2":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.03.3":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.03.4":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.0":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.1":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.2":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.3":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.4":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.5":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.6":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.7":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.8":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.9":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.05.0":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.06.0":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.07.0":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.07.1":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.07.2":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.07.3":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.07.4":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.08.0":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.08.1":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.08.2":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.08.3":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.09.0":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.09.1":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.09.2":
      "family": "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.10.0":
      "family": "aurora-mysql5.7"
    
  DBEngineVersionMap:
    "Aurora-MySQL5.6.10a":
      "engineversion": "5.6.10a"
    "Aurora-MySQL5.6-1.19.0":
      "engineversion": "5.6.mysql_aurora.1.19.0"
    "Aurora-MySQL5.6-1.19.1":
      "engineversion": "5.6.mysql_aurora.1.19.1"
    "Aurora-MySQL5.6-1.19.2":
      "engineversion": "5.6.mysql_aurora.1.19.2"
    "Aurora-MySQL5.6-1.19.5":
      "engineversion": "5.6.mysql_aurora.1.19.5"
    "Aurora-MySQL5.6-1.19.6":
      "engineversion": "5.6.mysql_aurora.1.19.6"
    "Aurora-MySQL5.6-1.20.0":
      "engineversion": "5.6.mysql_aurora.1.20.0"
    "Aurora-MySQL5.6-1.20.1":
      "engineversion": "5.6.mysql_aurora.1.20.1"
    "Aurora-MySQL5.6-1.21.0":
      "engineversion": "5.6.mysql_aurora.1.21.0"
    "Aurora-MySQL5.6-1.22.0":
      "engineversion": "5.6.mysql_aurora.1.22.0"
    "Aurora-MySQL5.6-1.22.1":
      "engineversion": "5.6.mysql_aurora.1.22.1"
    "Aurora-MySQL5.6-1.22.2":
      "engineversion": "5.6.mysql_aurora.1.22.2"
    "Aurora-MySQL5.6-1.22.3":
      "engineversion": "5.6.mysql_aurora.1.22.3"
    "Aurora-MySQL5.6-1.22.4":
      "engineversion": "5.6.mysql_aurora.1.22.4"
    "Aurora-MySQL5.6-1.23.0":
      "engineversion": "5.6.mysql_aurora.1.23.0"
    "Aurora-MySQL5.6-1.23.1":
      "engineversion": "5.6.mysql_aurora.1.23.1"
    "Aurora-MySQL5.7.12":
      "engineversion": "5.7.12"
    "Aurora-MySQL5.7-2.03.2":
      "engineversion": "5.7.mysql_aurora.2.03.2"
    "Aurora-MySQL5.7-2.03.3":
      "engineversion": "5.7.mysql_aurora.2.03.3"
    "Aurora-MySQL5.7-2.03.4":
      "engineversion": "5.7.mysql_aurora.2.03.4"
    "Aurora-MySQL5.7-2.04.0":
      "engineversion": "5.7.mysql_aurora.2.04.0"
    "Aurora-MySQL5.7-2.04.1":
      "engineversion": "5.7.mysql_aurora.2.04.1"
    "Aurora-MySQL5.7-2.04.2":
      "engineversion": "5.7.mysql_aurora.2.04.2"
    "Aurora-MySQL5.7-2.04.3":
      "engineversion": "5.7.mysql_aurora.2.04.3"
    "Aurora-MySQL5.7-2.04.4":
      "engineversion": "5.7.mysql_aurora.2.04.4"
    "Aurora-MySQL5.7-2.04.5":
      "engineversion": "5.7.mysql_aurora.2.04.5"
    "Aurora-MySQL5.7-2.04.6":
      "engineversion": "5.7.mysql_aurora.2.04.6"
    "Aurora-MySQL5.7-2.04.7":
      "engineversion": "5.7.mysql_aurora.2.04.7"
    "Aurora-MySQL5.7-2.04.8":
      "engineversion": "5.7.mysql_aurora.2.04.8"
    "Aurora-MySQL5.7-2.04.9":
      "engineversion": "5.7.mysql_aurora.2.04.9"
    "Aurora-MySQL5.7-2.05.0":
      "engineversion": "5.7.mysql_aurora.2.05.0"
    "Aurora-MySQL5.7-2.06.0":
      "engineversion": "5.7.mysql_aurora.2.06.0"
    "Aurora-MySQL5.7-2.07.0":
      "engineversion": "5.7.mysql_aurora.2.07.0"
    "Aurora-MySQL5.7-2.07.1":
      "engineversion": "5.7.mysql_aurora.2.07.1"
    "Aurora-MySQL5.7-2.07.2":
      "engineversion": "5.7.mysql_aurora.2.07.2"
    "Aurora-MySQL5.7-2.07.3":
      "engineversion": "5.7.mysql_aurora.2.07.3"
    "Aurora-MySQL5.7-2.07.4":
      "engineversion": "5.7.mysql_aurora.2.07.4"
    "Aurora-MySQL5.7-2.08.0":
      "engineversion": "5.7.mysql_aurora.2.08.0"
    "Aurora-MySQL5.7-2.08.1":
      "engineversion": "5.7.mysql_aurora.2.08.1"
    "Aurora-MySQL5.7-2.08.2":
      "engineversion": "5.7.mysql_aurora.2.08.2"
    "Aurora-MySQL5.7-2.08.3":
      "engineversion": "5.7.mysql_aurora.2.08.3"
    "Aurora-MySQL5.7-2.09.0":
      "engineversion": "5.7.mysql_aurora.2.09.0"
    "Aurora-MySQL5.7-2.09.1":
      "engineversion": "5.7.mysql_aurora.2.09.1"
    "Aurora-MySQL5.7-2.09.2":
      "engineversion": "5.7.mysql_aurora.2.09.2"
    "Aurora-MySQL5.7-2.10.0":
      "engineversion": "5.7.mysql_aurora.2.10.0"

  DBEngineNameMap:
    "Aurora-MySQL5.6.10a":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.19.0":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.19.1":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.19.2":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.19.5":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.19.6":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.20.0":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.20.1":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.21.0":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.22.0":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.22.1":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.22.2":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.22.3":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.22.4":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.23.0":
      "enginename": "aurora"
    "Aurora-MySQL5.6-1.23.1":
      "enginename": "aurora"
    "Aurora-MySQL5.7.12":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.03.2":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.03.3":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.03.4":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.04.0":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.04.1":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.04.2":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.04.3":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.04.4":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.04.5":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.04.6":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.04.7":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.04.8":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.04.9":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.05.0":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.06.0":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.07.0":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.07.1":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.07.2":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.07.3":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.07.4":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.08.0":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.08.1":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.08.2":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.08.3":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.09.0":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.09.1":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.09.2":
      "enginename": "aurora-mysql"
    "Aurora-MySQL5.7-2.10.0":
      "enginename": "aurora-mysql"

Rules:
  SubnetsInVPC:
    Assertions:
      - Assert: !Equals [!ValueOf ["Subnet1ID", "VpcId"], !Ref VPCID]
        AssertDescription: "Please provide a private subnet which belongs to the specified VPC"
      - Assert: !Equals [!ValueOf ["Subnet2ID", "VpcId"], !Ref VPCID]
        AssertDescription: "Please provide a private subnet which belongs to the specified VPC"
  SubnetsUnique:
    Assertions:
      - Assert: !Not [!Equals [!Ref Subnet1ID, !Ref Subnet2ID]]
        AssertDescription: "Please provide 2 distinct private subnets"

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  DBPasswordRotation:
    !Equals
    - !Ref RotateDBPassword
    - 'true'
  IsServerlessEnabled:
    !Equals
    - !Ref DBEngineMode
    - 'serverless'
  IsServerlessDisabled:
    !Not
      - !Equals
        - !Ref DBEngineMode
        - 'serverless'
  IsReaderEndpointAvailable:
    !And
      - !Not [!Equals [!Ref DBEngineMode,'serverless']]
      - !Not [!Equals [!Ref DBEngineMode,'multimaster']]
  IsDBMultiAZ:
    !And
    - !Equals
      - !Ref DBMultiAZ
      - 'true'
    - !Or
      - !Equals
        - !Ref DBEngineMode
        - 'provisioned'
      - !Equals
        - !Ref DBEngineMode
        - 'parallelquery'
      - !Equals
        - !Ref DBEngineMode
        - 'global'
      - !Equals
        - !Ref DBEngineMode
        - 'multimaster'
  EnableIAMDBAuth:
    !Or
    - !Equals
      - !Ref DBEngineMode
      - 'provisioned'
    - !Equals
      - !Ref DBEngineMode
      - 'global'
    - !Equals
      - !Ref DBEngineMode
      - 'multimaster'
    - !And 
      - !Equals [!Ref DBEngineMode, 'parallelquery']
      - !And 
        - !Not [!Equals [!Ref DBEngineVersion,'Aurora-MySQL5.6.10a']]
        - !Not [!Equals [!Ref DBEngineVersion,'Aurora-MySQL5.6-1.19.6']]
        - !Not [!Equals [!Ref DBEngineVersion,'Aurora-MySQL5.6-1.20.1']]
        - !Not [!Equals [!Ref DBEngineVersion,'Aurora-MySQL5.6-1.22.2']]  
#  EnablePI:
#    !And 
#      - !And 
#        - !Not [!Equals [!Ref DBInstanceClass,'db.t3.medium']]
#        - !Not [!Equals [!Ref DBInstanceClass,'db.t3.small']]
#      - !Or 
#        - !Equals
#          - !Ref DBEngineMode
#          - 'provisioned'
#        - !Equals
#          - !Ref DBEngineMode
#          - 'global'
#        - !And 
#          - !Equals [!Ref DBEngineMode, 'parallelquery']
#          - !Or 
#            - !Equals [!Ref DBEngineVersion,'Aurora-MySQL5.6-1.23.0']
#            - !Equals [!Ref DBEngineVersion,'Aurora-MySQL5.6-1.23.1']
#            - !Equals [!Ref DBEngineVersion,'Aurora-MySQL5.7-2.09.0']
#            - !Equals [!Ref DBEngineVersion,'Aurora-MySQL5.7-2.09.1']
#            - !Equals [!Ref DBEngineVersion,'Aurora-MySQL5.7-2.09.2']
  EnableBackTrack:
    !And
    - !Equals [!Ref DBBackTrack, 'true']
    - !Or
      - !Equals [!Ref DBEngineMode, 'provisioned']
      - !And 
        - !Equals [!Ref DBEngineMode, 'parallelquery']
        - !Or 
          - !Equals [!Ref DBEngineVersion,'Aurora-MySQL5.6-1.23.0']
          - !Equals [!Ref DBEngineVersion,'Aurora-MySQL5.6-1.23.1']
          - !Equals [!Ref DBEngineVersion,'Aurora-MySQL5.7-2.09.0']
          - !Equals [!Ref DBEngineVersion,'Aurora-MySQL5.7-2.09.1']
          - !Equals [!Ref DBEngineVersion,'Aurora-MySQL5.7-2.09.2']
          - !Equals [!Ref DBEngineVersion,'Aurora-MySQL5.7-2.10.0']
  DoEnableCWLogExport: !And [!Not [!Equals [!Join ['', !Ref DBCWLogExports], '']], !Condition IsServerlessDisabled]
  DoCreateDatabase:
    !Not
    - !Equals
      - !Ref DBName
      - ''
  UseDatabaseEncryption:
    !Equals
    - !Ref DBAllocatedStorageEncrypted
    - true
  CreateSecurityGroup:
    !Equals
    - !Ref CustomDBSecurityGroup
    - ''

Resources:
  MonitoringIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "monitoring.rds.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
  DBSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref NotificationList
          Protocol: email
  EncryptionKey:
    DeletionPolicy: Retain
    Type: AWS::KMS::Key
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - EIAMPolicyWildcardResource
            - EIAMPolicyActionWildcard
            - W3011 # Quick Starts need to be able to delete all assets upon stack deletion
      cfn_nag:
        rules_to_suppress:
          - id: F19
            reason: "Key rotation would cause the database to become inaccessible"
          - id: F76
            reason: "Conditions are included in the policy to limit its scope"
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: !Ref AWS::StackName
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 'kms:*'
            Resource: '*'
          - Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:CreateGrant'
              - 'kms:ListGrants'
              - 'kms:DescribeKey'
            Resource: '*'
            Condition:
              StringEquals:
                'kms:CallerAccount': !Ref 'AWS::AccountId'
                'kms:ViaService': !Sub 'rds.${AWS::Region}.amazonaws.com'
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
  EncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}"
      TargetKeyId: !Ref EncryptionKey
  AuroraDB1:
    Condition: IsServerlessDisabled
    Type: "AWS::RDS::DBInstance"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F80
            reason: "Quick Start assets must be able to be deleted"
    Properties:
      AutoMinorVersionUpgrade: !Ref DBAutoMinorVersionUpgrade
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceClass: !Ref DBInstanceClass
      Engine: !FindInMap [DBEngineNameMap, !Ref DBEngineVersion, "enginename"]
      DBParameterGroupName: !Ref DBParamGroup
      PubliclyAccessible: false
      MonitoringInterval: 1
      MonitoringRoleArn: !GetAtt MonitoringIAMRole.Arn
#      EnablePerformanceInsights: !If [EnablePI, true, !Ref 'AWS::NoValue']
#      PerformanceInsightsKMSKeyId: !If [EnablePI, !Ref EncryptionKey, !Ref 'AWS::NoValue']
#      PerformanceInsightsRetentionPeriod: !If [EnablePI, 7, !Ref 'AWS::NoValue']
      CopyTagsToSnapshot: true
      Tags:
        -
          Key: Name
          Value: !Sub AuroraDB-${AWS::StackName}
        -
          Key: EnvironmentStage
          Value: !Ref EnvironmentStage
        -
          Key: Application
          Value: !Ref Application
        -
          Key: ApplicationVersion
          Value: !Ref ApplicationVersion
        -
          Key: ProjectCostCenter
          Value: !Ref ProjectCostCenter
        -
          Key: Confidentiality
          Value: !Ref Confidentiality
        -
          Key: Compliance
          Value: !Ref Compliance
  AuroraDB2:
    Condition: IsDBMultiAZ
    Type: "AWS::RDS::DBInstance"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F80
            reason: "Quick Start assets must be able to be deleted"
    Properties:
      AutoMinorVersionUpgrade: !Ref DBAutoMinorVersionUpgrade
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceClass: !Ref DBInstanceClass
      Engine: !FindInMap [DBEngineNameMap, !Ref DBEngineVersion, "enginename"]
      DBParameterGroupName: !Ref DBParamGroup
      PubliclyAccessible: false
      MonitoringInterval: 1
      MonitoringRoleArn: !GetAtt MonitoringIAMRole.Arn
#      EnablePerformanceInsights: !If [EnablePI, true, !Ref 'AWS::NoValue']
#      PerformanceInsightsKMSKeyId: !If [EnablePI, !Ref EncryptionKey, !Ref 'AWS::NoValue']
#      PerformanceInsightsRetentionPeriod: !If [EnablePI, 7, !Ref 'AWS::NoValue']
      CopyTagsToSnapshot: true
      Tags:
        -
          Key: Name
          Value: !Sub AuroraDB-${AWS::StackName}
        -
          Key: EnvironmentStage
          Value: !Ref EnvironmentStage
        -
          Key: Application
          Value: !Ref Application
        -
          Key: ApplicationVersion
          Value: !Ref ApplicationVersion
        -
          Key: ProjectCostCenter
          Value: !Ref ProjectCostCenter
        -
          Key: Confidentiality
          Value: !Ref Confidentiality
        -
          Key: Compliance
          Value: !Ref Compliance
  DBParamGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Join ["- ", ["Aurora MySQL DB Parameter Group for Cloudformation Stack ", !Ref DBName]]
      Family: !FindInMap [DBFamilyMap, !Ref DBEngineVersion, "family"]
      Parameters:
        slow_query_log: '1'
        long_query_time: '10'
        log_output: 'FILE'
        innodb_print_all_deadlocks: '1'
  RDSDBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Join ["- ", ["Aurora MySQL Cluster Parameter Group for Cloudformation Stack ", !Ref DBName]]
      Family: !FindInMap [DBFamilyMap, !Ref DBEngineVersion, "family"]
      Parameters:
        time_zone: UTC
        server_audit_logging: 1
        server_audit_events: 'QUERY_DCL,QUERY_DDL,CONNECT'
  AuroraDBCluster:
    Type: "AWS::RDS::DBCluster"
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - ERDSStorageEncryptionEnabled # Storage encryption is optional based on a parameter
            - W3011 # Quick Starts need to be able to delete all assets upon stack deletion
    Properties:
      BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
      DBClusterParameterGroupName: !Ref RDSDBClusterParameterGroup
      DBSubnetGroupName: !Ref AuroraDBSubnetGroup
      DatabaseName:
        !If
        - DoCreateDatabase
        - !Ref DBName
        - !Ref AWS::NoValue
      Engine: !FindInMap [DBEngineNameMap, !Ref DBEngineVersion, "enginename"]
      EngineVersion: !FindInMap [DBEngineVersionMap, !Ref DBEngineVersion, "engineversion"]
      EngineMode: !Ref DBEngineMode
      ScalingConfiguration: !If
        - IsServerlessEnabled
        - AutoPause: !Ref ServerlessAutoPause
          MaxCapacity: !Ref ServerlessMaxCapacityUnit
          MinCapacity: !Ref ServerlessMinCapacityUnit
          SecondsUntilAutoPause: !Ref ServerlessSecondsUntilAutoPause
        - !Ref AWS::NoValue
      KmsKeyId: !If [UseDatabaseEncryption, !GetAtt EncryptionKey.Arn, !Ref 'AWS::NoValue']
      MasterUserPassword:
        !If
        - DBPasswordRotation
        - !Join ['', ['{{resolve:secretsmanager:', !Ref RDSInstanceRotationSecret, '::password}}' ]]
        - !Ref DBMasterUserPassword
      MasterUsername: !Ref DBMasterUsername
      Port: !Ref DBPort
      StorageEncrypted: !If [UseDatabaseEncryption, !Ref DBAllocatedStorageEncrypted, !Ref 'AWS::NoValue']
      EnableIAMDatabaseAuthentication: !If [EnableIAMDBAuth, true, !Ref 'AWS::NoValue']
      BacktrackWindow: !If [EnableBackTrack, 259200, !Ref 'AWS::NoValue']
      EnableCloudwatchLogsExports: !If [DoEnableCWLogExport, !Ref DBCWLogExports, !Ref "AWS::NoValue"]
      Tags:
        -
          Key: Name
          Value: !Sub AuroraDB-${AWS::StackName}
        -
          Key: EnvironmentStage
          Value: !Ref EnvironmentStage
        -
          Key: Application
          Value: !Ref Application
        -
          Key: ApplicationVersion
          Value: !Ref ApplicationVersion
        -
          Key: ProjectCostCenter
          Value: !Ref ProjectCostCenter
        -
          Key: Confidentiality
          Value: !Ref Confidentiality
        -
          Key: Compliance
          Value: !Ref Compliance
      VpcSecurityGroupIds:
        !If
        - CreateSecurityGroup
        - [!Ref RDSSecurityGroup]
        - [!Ref CustomDBSecurityGroup]
    UpdateReplacePolicy: Snapshot
  AuroraDBSubnetGroup:
    Properties:
      DBSubnetGroupDescription: "Subnets available for the Amazon Aurora database instance"
      SubnetIds:
        - !Ref Subnet1ID
        - !Ref Subnet2ID
    Type: "AWS::RDS::DBSubnetGroup"
  RDSSecurityGroup:
    Condition: CreateSecurityGroup
    Type: "AWS::EC2::SecurityGroup"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W40
            reason: "Standard Amazon practice"
          - id: W5
            reason: "Standard Amazon practice"
          - id: W36
            reason: "Group description is sufficient"
    Properties:
      GroupDescription: "Allow access to database port"
      SecurityGroupEgress:
        -
          CidrIp: 0.0.0.0/0
          FromPort: -1
          IpProtocol: '-1'
          ToPort: -1
      SecurityGroupIngress:
        -
          CidrIp: !Ref DBAccessCIDR
          FromPort: !Ref DBPort
          IpProtocol: tcp
          ToPort: !Ref DBPort
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: !Sub RDSSecurityGroup-${AWS::StackName}
  RDSSecurityGroupIngress:
    Condition: CreateSecurityGroup
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !GetAtt 'RDSSecurityGroup.GroupId'
      IpProtocol: '-1'
      SourceSecurityGroupId: !Ref RDSSecurityGroup
      Description: 'Self Reference'
  CPUUtilizationAlarm1:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsServerlessDisabled
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - Ref: DBSNSTopic
      AlarmDescription: 'CPU_Utilization'
      Dimensions:
        - Name: DBInstanceIdentifier
          Value:
            Ref: AuroraDB1
      MetricName: CPUUtilization
      Statistic: Maximum
      Namespace: 'AWS/RDS'
      Threshold: 80
      Unit: Percent
      ComparisonOperator: 'GreaterThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  CPUUtilizationAlarm2:
    Condition: IsDBMultiAZ
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - Ref: DBSNSTopic
      AlarmDescription: 'CPU_Utilization'
      Dimensions:
        - Name: DBInstanceIdentifier
          Value:
            Ref: AuroraDB2
      MetricName: CPUUtilization
      Statistic: Maximum
      Namespace: 'AWS/RDS'
      Threshold: 80
      Unit: Percent
      ComparisonOperator: 'GreaterThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  FreeLocalStorageAlarm1:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsServerlessDisabled
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - Ref: DBSNSTopic
      AlarmDescription: 'Free Local Storage'
      Dimensions:
        - Name: DBInstanceIdentifier
          Value:
            Ref: AuroraDB1
      MetricName: 'FreeLocalStorage'
      Statistic: Average
      Namespace: 'AWS/RDS'
      Threshold: 5368709120
      Unit: Bytes
      ComparisonOperator: 'LessThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  FreeLocalStorageAlarm2:
    Condition: IsDBMultiAZ
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - Ref: DBSNSTopic
      AlarmDescription: 'Free Local Storage'
      Dimensions:
        - Name: DBInstanceIdentifier
          Value:
            Ref: AuroraDB2
      MetricName: 'FreeLocalStorage'
      Statistic: Average
      Namespace: 'AWS/RDS'
      Threshold: 5368709120
      Unit: Bytes
      ComparisonOperator: 'LessThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  FreeableMemoryAlarm1:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsServerlessDisabled
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - Ref: DBSNSTopic
      AlarmDescription: 'Freeable Memory'
      Dimensions:
        - Name: DBInstanceIdentifier
          Value:
            Ref: AuroraDB1
      MetricName: 'FreeableMemory'
      Statistic: Average
      Namespace: 'AWS/RDS'
      Threshold: 2147483648
      Unit: Bytes
      ComparisonOperator: 'LessThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  FreeableMemoryAlarm2:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsDBMultiAZ
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - Ref: DBSNSTopic
      AlarmDescription: 'Freeable Memory'
      Dimensions:
        - Name: DBInstanceIdentifier
          Value:
            Ref: AuroraDB2
      MetricName: 'FreeableMemory'
      Statistic: Average
      Namespace: 'AWS/RDS'
      Threshold: 2147483648
      Unit: Bytes
      ComparisonOperator: 'LessThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  DatabaseClusterEventSubscription:
    Type: 'AWS::RDS::EventSubscription'
    Properties:
      EventCategories:
        - failover
        - failure
        - notification
      SnsTopicArn: !Ref DBSNSTopic
      SourceIds: [!Ref AuroraDBCluster]
      SourceType: 'db-cluster'
  DatabaseInstanceEventSubscription:
    Type: 'AWS::RDS::EventSubscription'
    Condition: IsServerlessDisabled
    Properties:
      EventCategories:
        - availability
        - configuration change
        - deletion
        - failover
        - failure
        - maintenance
        - notification
        - recovery
      SnsTopicArn: !Ref DBSNSTopic
      SourceIds:
        - !Ref AuroraDB1
        - !If [IsDBMultiAZ, !Ref AuroraDB2, !Ref "AWS::NoValue"]
      SourceType: 'db-instance'
  RDSInstanceRotationSecret:
    Condition: DBPasswordRotation
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Join ['', ['Aurora MySQL Master User Secret ', 'for CloudFormation Stack ', !Ref 'AWS::StackName']]
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DBMasterUsername}"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: "\"'@/\\"
  SecretRDSInstanceAttachment:
    Condition: DBPasswordRotation
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref RDSInstanceRotationSecret
      TargetId: !Ref AuroraDBCluster
      TargetType: AWS::RDS::DBCluster
  RDSSecretRotationSchedule:
    Condition: DBPasswordRotation
    Type: AWS::SecretsManager::RotationSchedule
    DependsOn:
      - SecretRDSInstanceAttachment
    Properties:
      SecretId: !Ref RDSInstanceRotationSecret
      RotationLambdaARN: !GetAtt RDSRotationLambda.Arn
      RotationRules:
        AutomaticallyAfterDays: 89
  RDSRotationLambda:
    Condition: DBPasswordRotation
    DependsOn: CopyZips
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.7
      Role: !GetAtt LambdaExecutionRole.Arn
      Handler: lambda_function.lambda_handler
      Description: 'This is a lambda function to rotate MySql user password'
      Environment:
        Variables:
          SECRETS_MANAGER_ENDPOINT: !Sub 'https://secretsmanager.${AWS::Region}.amazonaws.com'
      VpcConfig:
        SecurityGroupIds:
          !If
          - CreateSecurityGroup
          - [!Ref RDSSecurityGroup]
          - [!Ref CustomDBSecurityGroup]
        SubnetIds:
          - !Ref Subnet1ID
          - !Ref Subnet2ID
      Code:
        S3Bucket: !Ref 'LambdaZipsBucket'
        S3Key: !Sub '${QSS3KeyPrefix}functions/packages/SSMRotateLambda/lambda.zip'
      Timeout: 300
  LambdaZipsBucket:
    Condition: DBPasswordRotation
    Type: AWS::S3::Bucket
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W51
            reason: "Bucket is temporary and is only used during deployment"
          - id: W41
            reason: "Bucket is temporary and is only used during deployment"
    Properties:
      Tags: []
  CopyZips:
    Condition: DBPasswordRotation
    Type: Custom::CopyZips
    Properties:
      ServiceToken: !GetAtt 'CopyZipsFunction.Arn'
      DestBucket: !Ref 'LambdaZipsBucket'
      SourceBucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Prefix: !Ref 'QSS3KeyPrefix'
      Objects:
        - functions/packages/SSMRotateLambda/lambda.zip
  LambdaExecutionRole:
    Condition: DBPasswordRotation
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Wildcard required to avoid circular dependency"
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - secretsmanager.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Sub arn:${AWS::Partition}:iam::aws:policy/SecretsManagerReadWrite
      Path: /
      Policies:
        - PolicyName: lambda_policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action:
                  - "secretsmanager:DescribeSecret"
                  - "secretsmanager:GetSecretValue"
                  - "secretsmanager:PutSecretValue"
                  - "secretsmanager:UpdateSecretVersionStage"
                Resource: !Sub 'arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*'
                Condition:
                  StringEquals:
                    secretsmanager:resource/AllowRotationLambdaArn: !Sub 'arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:SecretsManager-SecretRotation-${AWS::StackName}'
              - Effect: "Allow"
                Action:
                  - "secretsmanager:GetRandomPassword"
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:*:*:*
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource: "stack*"
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Condition: DBPasswordRotation
    Properties:
      FunctionName: !GetAtt RDSRotationLambda.Arn
      Action: 'lambda:InvokeFunction'
      Principal: secretsmanager.amazonaws.com
  CopyZipsFunction:
    Condition: DBPasswordRotation
    Type: AWS::Lambda::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: "Function role has required permissions"
    Properties:
      Description: Copies objects from a source S3 bucket to a destination
      Handler: index.handler
      Runtime: python3.7
      Role: !GetAtt 'CopyZipsRole.Arn'
      Timeout: 240
      Code:
        ZipFile: |
          import json
          import logging
          import threading
          import boto3
          import cfnresponse


          def copy_objects(source_bucket, dest_bucket, prefix, objects):
              s3 = boto3.client('s3')
              for o in objects:
                  key = prefix + o
                  copy_source = {
                      'Bucket': source_bucket,
                      'Key': key
                  }
                  print('copy_source: %s' % copy_source)
                  print('dest_bucket = %s'%dest_bucket)
                  print('key = %s' %key)
                  s3.copy_object(CopySource=copy_source, Bucket=dest_bucket,
                        Key=key)


          def delete_objects(bucket, prefix, objects):
              s3 = boto3.client('s3')
              objects = {'Objects': [{'Key': prefix + o} for o in objects]}
              s3.delete_objects(Bucket=bucket, Delete=objects)


          def timeout(event, context):
              logging.error('Execution is about to time out, sending failure response to CloudFormation')
              cfnresponse.send(event, context, cfnresponse.FAILED, {}, None)


          def handler(event, context):
              # make sure we send a failure to CloudFormation if the function
              # is going to timeout
              timer = threading.Timer((context.get_remaining_time_in_millis()
                        / 1000.00) - 0.5, timeout, args=[event, context])
              timer.start()

              print('Received event: %s' % json.dumps(event))
              status = cfnresponse.SUCCESS
              try:
                  source_bucket = event['ResourceProperties']['SourceBucket']
                  dest_bucket = event['ResourceProperties']['DestBucket']
                  prefix = event['ResourceProperties']['Prefix']
                  objects = event['ResourceProperties']['Objects']
                  if event['RequestType'] == 'Delete':
                      delete_objects(dest_bucket, prefix, objects)
                  else:
                      copy_objects(source_bucket, dest_bucket, prefix, objects)
              except Exception as e:
                  logging.error('Exception: %s' % e, exc_info=True)
                  status = cfnresponse.FAILED
              finally:
                  timer.cancel()
                  cfnresponse.send(event, context, status, {}, None)
  CopyZipsRole:
    Condition: DBPasswordRotation
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
        - PolicyName: lambda-copier
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub
                  - arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*
                  - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${LambdaZipsBucket}/${QSS3KeyPrefix}*'

Outputs:
  DBName:
    Description: "Amazon Aurora database name"
    Value: !Ref DBName
  AuroraClusterEndpoint:
    Description: "Amazon Aurora Cluster/Writer endpoint"
    Value: !Sub ${AuroraDBCluster.Endpoint.Address}
  AuroraReaderEndpoint:
    Condition: IsReaderEndpointAvailable
    Description: "Amazon Aurora Reader Endpoint"
    Value:  !Sub ${AuroraDBCluster.ReadEndpoint.Address}
  AuroraClusterPort:
    Description: "Amazon Aurora Endpoint port"
    Value: !Sub ${AuroraDBCluster.Endpoint.Port}
  AuroraClusterFullEndpoint:
    Description: "Full Amazon Aurora Cluster endpoint with port and database name"
    Value: !Sub ${AuroraDBCluster.Endpoint.Address}:${AuroraDBCluster.Endpoint.Port}/${DBName}
  AuroraMasterUsername:
    Description: "Amazon Aurora administrator user name"
    Value: !Ref DBMasterUsername
  AuroraMasterUserSecret:
    Condition: DBPasswordRotation
    Description: "Aurora Master User Secret ARN stored in AWS Secrets Manager"
    Value: !Ref RDSInstanceRotationSecret
  AuroraEncryptionKey:
    Condition: UseDatabaseEncryption
    Description: "Alias of the KMS encryption key used for storage and Performance Insights data encryption"
    Value: !Ref EncryptionKeyAlias
  Postdeployment:
    Value: https://fwd.aws/8xwxP
    Description: To test your deployment, see the procedure in the deployment guide.
